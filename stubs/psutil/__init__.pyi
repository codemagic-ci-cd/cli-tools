import os
from collections.abc import Generator
from typing import Any

from ._common import BSD as BSD
from ._common import CONN_CLOSE as CONN_CLOSE
from ._common import CONN_CLOSE_WAIT as CONN_CLOSE_WAIT
from ._common import CONN_CLOSING as CONN_CLOSING
from ._common import CONN_ESTABLISHED as CONN_ESTABLISHED
from ._common import CONN_FIN_WAIT1 as CONN_FIN_WAIT1
from ._common import CONN_FIN_WAIT2 as CONN_FIN_WAIT2
from ._common import CONN_LAST_ACK as CONN_LAST_ACK
from ._common import CONN_LISTEN as CONN_LISTEN
from ._common import CONN_NONE as CONN_NONE
from ._common import CONN_SYN_RECV as CONN_SYN_RECV
from ._common import CONN_SYN_SENT as CONN_SYN_SENT
from ._common import CONN_TIME_WAIT as CONN_TIME_WAIT
from ._common import FREEBSD as FREEBSD
from ._common import LINUX as LINUX
from ._common import MACOS as MACOS
from ._common import NETBSD as NETBSD
from ._common import NIC_DUPLEX_FULL as NIC_DUPLEX_FULL
from ._common import NIC_DUPLEX_HALF as NIC_DUPLEX_HALF
from ._common import NIC_DUPLEX_UNKNOWN as NIC_DUPLEX_UNKNOWN
from ._common import OPENBSD as OPENBSD
from ._common import OSX as OSX
from ._common import POSIX as POSIX
from ._common import STATUS_DEAD as STATUS_DEAD
from ._common import STATUS_DISK_SLEEP as STATUS_DISK_SLEEP
from ._common import STATUS_IDLE as STATUS_IDLE
from ._common import STATUS_LOCKED as STATUS_LOCKED
from ._common import STATUS_PARKED as STATUS_PARKED
from ._common import STATUS_RUNNING as STATUS_RUNNING
from ._common import STATUS_SLEEPING as STATUS_SLEEPING
from ._common import STATUS_STOPPED as STATUS_STOPPED
from ._common import STATUS_TRACING_STOP as STATUS_TRACING_STOP
from ._common import STATUS_WAITING as STATUS_WAITING
from ._common import STATUS_WAKING as STATUS_WAKING
from ._common import STATUS_ZOMBIE as STATUS_ZOMBIE
from ._common import SUNOS as SUNOS
from ._common import WINDOWS as WINDOWS
from ._common import AccessDenied as AccessDenied
from ._common import Error as Error
from ._common import NoSuchProcess as NoSuchProcess
from ._common import TimeoutExpired as TimeoutExpired
from ._common import ZombieProcess as ZombieProcess

AF_LINK: Any
version_info: Any

class Process:
    def __init__(self, pid: Any | None = ...) -> None: ...
    def __eq__(self, other): ...
    def __ne__(self, other): ...
    def __hash__(self): ...
    @property
    def pid(self): ...
    def oneshot(self) -> Generator[None, None, None]: ...
    def as_dict(self, attrs: Any | None = ..., ad_value: Any | None = ...): ...
    def parent(self): ...
    def parents(self): ...
    def is_running(self): ...
    def ppid(self): ...
    def name(self): ...
    def exe(self): ...
    def cmdline(self): ...
    def status(self): ...
    def username(self): ...
    def create_time(self): ...
    def cwd(self): ...
    def nice(self, value: Any | None = ...): ...
    def uids(self): ...
    def gids(self): ...
    def terminal(self): ...
    def num_fds(self): ...
    def io_counters(self): ...
    def ionice(self, ioclass: Any | None = ..., value: Any | None = ...): ...
    def rlimit(self, resource, limits: Any | None = ...): ...
    def cpu_affinity(self, cpus: Any | None = ...): ...
    def cpu_num(self): ...
    def environ(self): ...
    def num_handles(self): ...
    def num_ctx_switches(self): ...
    def num_threads(self): ...
    def threads(self): ...
    def children(self, recursive: bool = ...): ...
    def cpu_percent(self, interval: Any | None = ...): ...
    def cpu_times(self): ...
    def memory_info(self): ...
    def memory_info_ex(self): ...
    def memory_full_info(self): ...
    def memory_percent(self, memtype: str = ...): ...
    def memory_maps(self, grouped: bool = ...): ...
    def open_files(self): ...
    def connections(self, kind: str = ...): ...
    def send_signal(self, sig) -> None: ...
    def suspend(self) -> None: ...
    def resume(self) -> None: ...
    def terminate(self) -> None: ...
    def kill(self) -> None: ...
    def wait(self, timeout: Any | None = ...): ...

class Popen(Process):
    def __init__(self, *args, **kwargs) -> None: ...
    def __dir__(self): ...
    def __enter__(self): ...
    def __exit__(self, *args, **kwargs): ...
    def __getattribute__(self, name): ...
    def wait(self, timeout: Any | None = ...): ...

def pids(): ...
def pid_exists(pid): ...
def process_iter(attrs: Any | None = ..., ad_value: Any | None = ...) -> Generator[Any, None, Any]: ...
def wait_procs(procs, timeout: Any | None = ..., callback: Any | None = ...): ...
def cpu_count(logical: bool = ...): ...
def cpu_times(percpu: bool = ...): ...
def cpu_percent(interval: Any | None = ..., percpu: bool = ...): ...
def cpu_times_percent(interval: Any | None = ..., percpu: bool = ...): ...
def cpu_stats(): ...
def cpu_freq(percpu: bool = ...): ...

getloadavg = os.getloadavg

def virtual_memory(): ...
def swap_memory(): ...
def disk_usage(path): ...
def disk_partitions(all: bool = ...): ...
def disk_io_counters(perdisk: bool = ..., nowrap: bool = ...): ...
def net_io_counters(pernic: bool = ..., nowrap: bool = ...): ...
def net_connections(kind: str = ...): ...
def net_if_addrs(): ...
def net_if_stats(): ...
def sensors_battery(): ...
def boot_time(): ...
def users(): ...

# Names in __all__ with no definition:
#   __version__
